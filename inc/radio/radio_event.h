#pragma once
#include "inttypes.h"

class RADIO_EVENT{
public:
	typedef enum{
		EVENT_IDLE=0,
		EVENT_SWITCH_CHANGE,
		EVENT_PTT1_PRESS,
		EVENT_PTT1_RELEASE,
		EVENT_PTT2_PRESS,
		EVENT_PTT2_RELEASE,
		EVENT_LEFT_PRESS,
		EVENT_LEFT_RELEASE,
		EVENT_RIGHT_PRESS,
		EVENT_RIGHT_RELEASE,
		EVENT_AUDIO_RECEIVED,
		EVENT_AUDIO_TRANSMIT,
		EVENT_RNDIS_DATA_RECEIVED,
		EVENT_RNDIS_DATA_TRANSMIT,
		EVENT_RNDIS_DATA_POLL,
		EVENT_VCP_DATA_RECEIVED,
		EVENT_VCP_DATA_TRANSMIT,
		EVENT_VCP_DATA_POLL,
		EVENT_IP_STACK_USB_INPUT,
		EVENT_USBD_PROCESS,
		EVENT_GPS_NMEA_RECEIVED,
		EVENT_AUDIO_RECEPTION,
		EVENT_RADIO_RECEIVING,
		EVENT_RADIO_RECEIVING_BUSY,
		EVENT_RADIO_TRANSMITTING,
		EVENT_STARTUP,
		EVENT_ENTER_DFU_MODE,

		EVENT_VOLUME_SPK_ROTATE,
		EVENT_VOLUME_MIC_ROTATE,
		EVENT_NRISP_REPLY,
		EVENT_MENSAGEM,
		EVENT_ALERTA,
		EVENT_BATERIA_COMPUTADOR_BAIXA,

		EVENT_LAST,
	}EVENT_T;

	RADIO_EVENT();

	void Set(EVENT_T ev);
	void Set(EVENT_T ev, void* paremeter);
	void Reset(EVENT_T ev);
	uint8_t Check(EVENT_T ev);
	uint8_t CheckReset(EVENT_T ev);
	void* GetParameter();
	uint8_t Busy();
	uint8_t BusyCheck();

protected:
	uint32_t event;
	void *pointer;
};
